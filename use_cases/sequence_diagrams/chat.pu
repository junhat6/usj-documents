@startuml
actor "参加者／募集者" as User
participant "フロントエンド\n(UI)"     as Frontend
participant "バックエンド\n(API)"       as Backend
participant "メッセージブローカー\n(WebSocket)" as Broker
database "データベース"                as DB

User -> Frontend : チャット画面を開く
Frontend -> Backend : GET /rooms/{roomId}/chat/history
Backend -> DB : SELECT * FROM messages WHERE roomId=…
DB --> Backend : message list
Backend -> Frontend : 200 OK\n[{userId, message, timestamp}, …]
Frontend -> User : 過去メッセージ表示

User -> Frontend : メッセージ入力／送信
Frontend -> Broker : WebSocket SEND {roomId, userId, message}
Broker -> Backend : POST /messages\n{roomId, userId, message}
Backend -> DB : INSERT INTO messages (roomId, userId, message, timestamp)
DB --> Backend : 成功レスポンス
Backend -> Broker : ACK
Broker -> Frontend : WebSocket BROADCAST {userId, message, timestamp}
Frontend -> User : 新規メッセージ表示

@enduml
